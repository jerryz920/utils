The mystery part about K8s initialization is the privileged user: admin.conf is created out from no where, never uploaded, but then used as admin


details:

	authentication: the admin.conf contains Cert that is generated by CA of running K8s cluster, which authenticates the one who uses admin.conf to "kubernetes-admin" (visible in admin.conf) and group "system:masters" (only read through source code). Note the system:masters is written as "organization" field in the x509 request, which is the common practice for K8s to authenticate groups.

	Then the system:masters group has a default clusterrolebinding with cluster-admin, which is a pre-created role that can do anything.

	All the components are launched with RBAC enabled, so this way the admin.conf can effectively behave as cluster-admin, regardless of its own name.

Refs:
https://kubernetes.io/docs/admin/authorization/rbac/#default-roles-and-role-bindings
https://kubernetes.io/docs/admin/authentication/#x509-client-certs
<k8s-gitrepo>: file cmd/kubeadm/app/phases/kubeconfig/kubeconfig.go
version 1.8 of K8s


